between(1, 14, M), Obj = salt(M, 5, 9), Obj::initial_state(Initial), time(catch((threaded((call_with_time_limit(60, (depth_first(14)::solve(Obj, Initial, Path), A = depth_first)); call_with_time_limit(60, (breadth_first(14)::solve(Obj, Initial, Path), A = breadth_first)); call_with_time_limit(60, (hill_climbing(14)::solve(Obj, Initial, Path, Cost), A = hill_climbing)))), write(M-A), nl, Obj::print_path(Path)), _, write(M-time_out)) -> true; write(M-failed)), nl, flush_output, fail; true.

between(1, 14, M), Obj = salt(M, 5, 9), Obj::initial_state(Initial), time(threaded((depth_first(14)::solve(Obj, Initial, Path), A = depth_first; breadth_first(14)::solve(Obj, Initial, Path), A = breadth_first; hill_climbing(14)::solve(Obj, Initial, Path, Cost), A = hill_climbing))), write(M-A), nl, Obj::print_path(Path), nl, flush_output, fail; true.


between(1, 14, M), Obj = salt(M, 5, 9), Obj::initial_state(Initial), time(catch((threaded((call_with_time_limit(60, (depth_first(14)::solve(Obj, Initial, Path), A = depth_first)); call_with_time_limit(60, (breadth_first(14)::solve(Obj, Initial, Path), A = breadth_first)); call_with_time_limit(60, (hill_climbing(14)::solve(Obj, Initial, Path, Cost), A = hill_climbing)); call_with_time_limit(60, (mt_hill_climbing(14,4)::solve(Obj, Initial, Path, Cost), A = mt_hill_climbing)))), write(M-A), nl, Obj::print_path(Path)), _, write(M-time_out)) -> true; write(M-failed)), nl, flush_output, fail; true.


between(1, 14, M), Obj = salt(M, 5, 9), Obj::initial_state(Initial), time(catch((threaded((call_with_time_limit(60, (depth_first(12)::solve(Obj, Initial, Path), A = depth_first)); call_with_time_limit(60, (breadth_first(12)::solve(Obj, Initial, Path), A = breadth_first)); call_with_time_limit(60, (hill_climbing(12)::solve(Obj, Initial, Path, Cost), A = hill_climbing)); call_with_time_limit(60, (mt_hill_climbing(12, 4)::solve(Obj, Initial, Path, Cost), A = mt_hill_climbing)))), write(M-A), nl, Obj::print_path(Path)), _, write(M-time_out))), nl, flush_output, fail; true.


between(1, 22, M), Obj = salt(M, 7, 15), Obj::initial_state(Initial), time(catch((threaded((depth_first(4)::solve(Obj, Initial, Path), A = depth_first; breadth_first(4)::solve(Obj, Initial, Path), A = breadth_first; hill_climbing(4)::solve(Obj, Initial, Path, Cost), A = hill_climbing)), write(M-A), nl, Obj::print_path(Path)), _, write(M-time_out)) -> true; write(M-failed)), nl, flush_output, fail; true.


between(1, 22, M), Obj = salt(M, 7, 15), Obj::initial_state(Initial), time(catch((threaded((call_with_time_limit(60, (depth_first(22)::solve(Obj, Initial, Path), A = depth_first)); call_with_time_limit(60, (breadth_first(22)::solve(Obj, Initial, Path), A = breadth_first)); call_with_time_limit(60, (hill_climbing(22)::solve(Obj, Initial, Path, Cost), A = hill_climbing)))), write(M-A), nl, Obj::print_path(Path)), _, write(M-time_out)) -> true; write(M-failed)), nl, flush_output, fail; true.
